{"id":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","dependencies":[{"name":"/Users/waynerumble/Desktop/ReactElectronMirror/package.json","includedInParent":true,"mtime":1546867311422},{"name":"/Users/waynerumble/Desktop/ReactElectronMirror/.babelrc","includedInParent":true,"mtime":1546857854569},{"name":"/Users/waynerumble/Desktop/ReactElectronMirror/node_modules/react-cloud-vision-api/package.json","includedInParent":true,"mtime":1546857860769},{"name":"string-template","loc":{"line":3,"column":26},"parent":"/Users/waynerumble/Desktop/ReactElectronMirror/node_modules/react-cloud-vision-api/lib/models/apirequest.js","resolved":"/Users/waynerumble/Desktop/ReactElectronMirror/node_modules/string-template/index.js"}],"generated":{"js":"'use strict';\n\nvar parseString = require('string-template');\n\nfunction logError (err) {\n  if (err) {\n    console.error(err);\n  }\n}\n\nfunction createCallback (callback) {\n  return typeof callback === 'function' ? callback : logError;\n}\n\nfunction getMissingParams (params, required) {\n  var missing = [];\n\n  required.forEach(function (param) {\n    // Is the required param in the params object?\n    if (!params[param]) {\n      missing.push(param);\n    }\n  });\n\n  // If there are any required params missing, return their names in array, otherwise return null\n  return missing.length > 0 ? missing : null;\n}\n\nfunction DefaultTransporter(){\n\n};\nDefaultTransporter.prototype.request = function(opts, auth, opt_callback) {\n  const url = (opts.uri || opts.url) + '?key=' + auth;\n  let err = false;\n  let response = null;\n  return fetch(url, opts).then(\n    result => {\n      response = result;\n      err = result.ok !== true;\n      return result.text();\n    }\n  ).then(text => {\n    this.wrapCallback_(opt_callback)(err, response, text);\n  });\n};\n\n/**\n * Wraps the response callback.\n * @param {Function=} opt_callback Optional callback.\n * @return {Function} Wrapped callback function.\n * @private\n */\nDefaultTransporter.prototype.wrapCallback_ = function(opt_callback) {\n  return function(err, res, body) {\n    if (err || !body) {\n      return opt_callback && opt_callback(err, body, res);\n    }\n    // Only and only application/json responses should\n    // be decoded back to JSON, but there are cases API back-ends\n    // responds without proper content-type.\n    try {\n      body = JSON.parse(body);\n    } catch (err) { /* no op */ }\n\n    if (body && body.error && res.statusCode !== 200) {\n      if (typeof body.error === 'string') {\n        err = new Error(body.error);\n        err.code = res.statusCode;\n\n      } else if (Array.isArray(body.error.errors)) {\n        err = new Error(body.error.errors.map(\n                         function(err) { return err.message; }\n                       ).join('\\n'));\n        err.code = body.error.code;\n        err.errors = body.error.errors;\n\n      } else {\n        err = new Error(body.error.message);\n        err.code = body.error.code || res.statusCode;\n      }\n\n      body = null;\n\n    } else if (res.statusCode >= 500) {\n      // Consider all '500 responses' errors.\n      err = new Error(body);\n      err.code = res.statusCode;\n      body = null;\n    }\n\n    if (opt_callback) {\n      opt_callback(err, body, res);\n    }\n  };\n};\n\n/**\n * Create and send request to Google API\n * @param  {object}   parameters Parameters used to form request\n * @param  {Function} callback   Callback when request finished or error found\n * @return {Request}             Returns Request object or null\n */\nfunction createAPIRequest (parameters, callback) {\n  var req, body, missingParams;\n  var params = parameters.params;\n  var options = Object.assign({}, parameters.options);\n\n  // If the params are not present, and callback was passed instead,\n  // use params as the callback and create empty params.\n  if (typeof params === 'function') {\n    callback = params;\n    params = {};\n  }\n\n  // Create a new params object so it can no longer be modified from outside code\n  // Also support global and per-client params, but allow them to be overriden per-request\n  params = Object.assign(\n    {}, // New base object\n    params // API call params\n  );\n\n  var media = params.media || {};\n  var resource = params.resource;\n  var authClient = params.auth;\n\n  var defaultMime = 'text/plain';\n  delete params.media;\n  delete params.resource;\n  delete params.auth;\n\n  // Grab headers from user provided options\n  var headers = params.headers || {};\n  delete params.headers;\n\n  // Un-alias parameters that were modified due to conflicts with reserved names\n  Object.keys(params).forEach(function (key) {\n    if (key.slice(-1) === '_') {\n      var newKey = key.slice(0, -1);\n      params[newKey] = params[key];\n      delete params[key];\n    }\n  });\n\n  // Normalize callback\n  callback = createCallback(callback);\n\n  // Check for missing required parameters in the API request\n  missingParams = getMissingParams(params, parameters.requiredParams);\n  if (missingParams) {\n    // Some params are missing - stop further operations and inform the developer which required\n    // params are not included in the request\n    callback(new Error('Missing required parameters: ' + missingParams.join(', ')));\n\n    return null;\n  }\n\n  // delete path parameters from the params object so they do not end up in query\n  parameters.pathParams.forEach(function (param) {\n    delete params[param];\n  });\n\n  // if authClient is actually a string, use it as an API KEY\n  if (typeof authClient === 'string') {\n    params.key = params.key || authClient;\n    authClient = null;\n  }\n\n  if (parameters.bodyJSON) {\n      options.body = JSON.stringify(parameters.data);\n  }\n\n  options.headers = headers;\n\n  options = Object.assign({},\n    parameters.context.google._options,\n    parameters.context._options,\n    options\n  );\n  const auth = options.auth;\n  delete options.auth;\n  delete options.params; // We handle params ourselves and Request does not recognise 'params'\n\n  // create request (using authClient or otherwise and return request obj)\n  if (authClient) {\n    req = authClient.request(options, callback);\n  } else {\n    req = new DefaultTransporter().request(options, auth, callback);\n  }\n\n  if (body) {\n    body.pipe(req);\n  }\n  return req;\n}\n\n/**\n * Exports createAPIRequest\n * @type {Function}\n */\nmodule.exports = createAPIRequest;\n","map":{"mappings":[{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/apirequest.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}}],"sources":{"../node_modules/react-cloud-vision-api/lib/models/apirequest.js":"'use strict';\n\nvar parseString = require('string-template');\n\nfunction logError (err) {\n  if (err) {\n    console.error(err);\n  }\n}\n\nfunction createCallback (callback) {\n  return typeof callback === 'function' ? callback : logError;\n}\n\nfunction getMissingParams (params, required) {\n  var missing = [];\n\n  required.forEach(function (param) {\n    // Is the required param in the params object?\n    if (!params[param]) {\n      missing.push(param);\n    }\n  });\n\n  // If there are any required params missing, return their names in array, otherwise return null\n  return missing.length > 0 ? missing : null;\n}\n\nfunction DefaultTransporter(){\n\n};\nDefaultTransporter.prototype.request = function(opts, auth, opt_callback) {\n  const url = (opts.uri || opts.url) + '?key=' + auth;\n  let err = false;\n  let response = null;\n  return fetch(url, opts).then(\n    result => {\n      response = result;\n      err = result.ok !== true;\n      return result.text();\n    }\n  ).then(text => {\n    this.wrapCallback_(opt_callback)(err, response, text);\n  });\n};\n\n/**\n * Wraps the response callback.\n * @param {Function=} opt_callback Optional callback.\n * @return {Function} Wrapped callback function.\n * @private\n */\nDefaultTransporter.prototype.wrapCallback_ = function(opt_callback) {\n  return function(err, res, body) {\n    if (err || !body) {\n      return opt_callback && opt_callback(err, body, res);\n    }\n    // Only and only application/json responses should\n    // be decoded back to JSON, but there are cases API back-ends\n    // responds without proper content-type.\n    try {\n      body = JSON.parse(body);\n    } catch (err) { /* no op */ }\n\n    if (body && body.error && res.statusCode !== 200) {\n      if (typeof body.error === 'string') {\n        err = new Error(body.error);\n        err.code = res.statusCode;\n\n      } else if (Array.isArray(body.error.errors)) {\n        err = new Error(body.error.errors.map(\n                         function(err) { return err.message; }\n                       ).join('\\n'));\n        err.code = body.error.code;\n        err.errors = body.error.errors;\n\n      } else {\n        err = new Error(body.error.message);\n        err.code = body.error.code || res.statusCode;\n      }\n\n      body = null;\n\n    } else if (res.statusCode >= 500) {\n      // Consider all '500 responses' errors.\n      err = new Error(body);\n      err.code = res.statusCode;\n      body = null;\n    }\n\n    if (opt_callback) {\n      opt_callback(err, body, res);\n    }\n  };\n};\n\n/**\n * Create and send request to Google API\n * @param  {object}   parameters Parameters used to form request\n * @param  {Function} callback   Callback when request finished or error found\n * @return {Request}             Returns Request object or null\n */\nfunction createAPIRequest (parameters, callback) {\n  var req, body, missingParams;\n  var params = parameters.params;\n  var options = Object.assign({}, parameters.options);\n\n  // If the params are not present, and callback was passed instead,\n  // use params as the callback and create empty params.\n  if (typeof params === 'function') {\n    callback = params;\n    params = {};\n  }\n\n  // Create a new params object so it can no longer be modified from outside code\n  // Also support global and per-client params, but allow them to be overriden per-request\n  params = Object.assign(\n    {}, // New base object\n    params // API call params\n  );\n\n  var media = params.media || {};\n  var resource = params.resource;\n  var authClient = params.auth;\n\n  var defaultMime = 'text/plain';\n  delete params.media;\n  delete params.resource;\n  delete params.auth;\n\n  // Grab headers from user provided options\n  var headers = params.headers || {};\n  delete params.headers;\n\n  // Un-alias parameters that were modified due to conflicts with reserved names\n  Object.keys(params).forEach(function (key) {\n    if (key.slice(-1) === '_') {\n      var newKey = key.slice(0, -1);\n      params[newKey] = params[key];\n      delete params[key];\n    }\n  });\n\n  // Normalize callback\n  callback = createCallback(callback);\n\n  // Check for missing required parameters in the API request\n  missingParams = getMissingParams(params, parameters.requiredParams);\n  if (missingParams) {\n    // Some params are missing - stop further operations and inform the developer which required\n    // params are not included in the request\n    callback(new Error('Missing required parameters: ' + missingParams.join(', ')));\n\n    return null;\n  }\n\n  // delete path parameters from the params object so they do not end up in query\n  parameters.pathParams.forEach(function (param) {\n    delete params[param];\n  });\n\n  // if authClient is actually a string, use it as an API KEY\n  if (typeof authClient === 'string') {\n    params.key = params.key || authClient;\n    authClient = null;\n  }\n\n  if (parameters.bodyJSON) {\n      options.body = JSON.stringify(parameters.data);\n  }\n\n  options.headers = headers;\n\n  options = Object.assign({},\n    parameters.context.google._options,\n    parameters.context._options,\n    options\n  );\n  const auth = options.auth;\n  delete options.auth;\n  delete options.params; // We handle params ourselves and Request does not recognise 'params'\n\n  // create request (using authClient or otherwise and return request obj)\n  if (authClient) {\n    req = authClient.request(options, callback);\n  } else {\n    req = new DefaultTransporter().request(options, auth, callback);\n  }\n\n  if (body) {\n    body.pipe(req);\n  }\n  return req;\n}\n\n/**\n * Exports createAPIRequest\n * @type {Function}\n */\nmodule.exports = createAPIRequest;\n"},"lineCount":201}},"hash":"79f894d7650a2df5ba4d6f0b1292ac80","cacheData":{"env":{}}}