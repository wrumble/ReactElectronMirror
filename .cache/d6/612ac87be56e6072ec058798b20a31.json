{"id":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","dependencies":[{"name":"/Users/waynerumble/Desktop/ReactElectronMirror/package.json","includedInParent":true,"mtime":1546943779295},{"name":"/Users/waynerumble/Desktop/ReactElectronMirror/.babelrc","includedInParent":true,"mtime":1546857854569},{"name":"/Users/waynerumble/Desktop/ReactElectronMirror/node_modules/react-cloud-vision-api/package.json","includedInParent":true,"mtime":1546857860769},{"name":"underscore","loc":{"line":2,"column":19},"parent":"/Users/waynerumble/Desktop/ReactElectronMirror/node_modules/react-cloud-vision-api/lib/clients/v1.js","resolved":"/Users/waynerumble/Desktop/ReactElectronMirror/node_modules/underscore/underscore.js"},{"name":"../models/apirequest","loc":{"line":3,"column":29},"parent":"/Users/waynerumble/Desktop/ReactElectronMirror/node_modules/react-cloud-vision-api/lib/clients/v1.js","resolved":"/Users/waynerumble/Desktop/ReactElectronMirror/node_modules/react-cloud-vision-api/lib/models/apirequest.js"}],"generated":{"js":"'use strict'\nconst __ = require('underscore'),\n  createAPIRequest = require('../models/apirequest')\n\nconst API_ANNOTATE = 'https://vision.googleapis.com/v1/images:annotate'\n\nclass Client {\n\n  constructor(options) {\n    this._options = options || {}\n  }\n\n  /**\n   * annotate\n   *\n   * @desc Call cloud vision API\n   *\n   * @param  {array} requests - Parameters for request\n   */\n  annotate(requests) {\n    return new Promise((resolve, reject) => {\n      this._buildRequests(requests).then((params) => {\n\n        var parameters = {\n          options: {\n            url: API_ANNOTATE,\n            method: 'POST'\n          },\n          bodyJSON: true,\n          data: {\n              requests: params            \n          },\n          params: {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n          },\n          requiredParams: [],\n          pathParams: [],\n          context: this\n        }\n        createAPIRequest(parameters, (err, response) => {\n          if (err) {\n            reject(err)\n          } else {\n            resolve(response)\n          }\n        })\n      })\n    })\n  }\n\n  _buildRequests(requests) {\n    return Promise.all(__.map(requests, (req) => req.build()))\n  }\n}\n\nmodule.exports = Client\n","map":{"mappings":[{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/clients/v1.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}}],"sources":{"../node_modules/react-cloud-vision-api/lib/clients/v1.js":"'use strict'\nconst __ = require('underscore'),\n  createAPIRequest = require('../models/apirequest')\n\nconst API_ANNOTATE = 'https://vision.googleapis.com/v1/images:annotate'\n\nclass Client {\n\n  constructor(options) {\n    this._options = options || {}\n  }\n\n  /**\n   * annotate\n   *\n   * @desc Call cloud vision API\n   *\n   * @param  {array} requests - Parameters for request\n   */\n  annotate(requests) {\n    return new Promise((resolve, reject) => {\n      this._buildRequests(requests).then((params) => {\n\n        var parameters = {\n          options: {\n            url: API_ANNOTATE,\n            method: 'POST'\n          },\n          bodyJSON: true,\n          data: {\n              requests: params            \n          },\n          params: {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n          },\n          requiredParams: [],\n          pathParams: [],\n          context: this\n        }\n        createAPIRequest(parameters, (err, response) => {\n          if (err) {\n            reject(err)\n          } else {\n            resolve(response)\n          }\n        })\n      })\n    })\n  }\n\n  _buildRequests(requests) {\n    return Promise.all(__.map(requests, (req) => req.build()))\n  }\n}\n\nmodule.exports = Client\n"},"lineCount":60}},"hash":"f52b76bd9df4107e991f9c4f46eb6b38","cacheData":{"env":{}}}