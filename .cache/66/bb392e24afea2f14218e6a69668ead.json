{"id":"../node_modules/react-cloud-vision-api/lib/models/Image.js","dependencies":[{"name":"/Users/waynerumble/Desktop/ReactElectronMirror/package.json","includedInParent":true,"mtime":1546867311422},{"name":"/Users/waynerumble/Desktop/ReactElectronMirror/.babelrc","includedInParent":true,"mtime":1546857854569},{"name":"/Users/waynerumble/Desktop/ReactElectronMirror/node_modules/react-cloud-vision-api/package.json","includedInParent":true,"mtime":1546857860769},{"name":"underscore","loc":{"line":4,"column":15},"parent":"/Users/waynerumble/Desktop/ReactElectronMirror/node_modules/react-cloud-vision-api/lib/models/Image.js","resolved":"/Users/waynerumble/Desktop/ReactElectronMirror/node_modules/underscore/underscore.js"},{"name":"buffer","parent":"/Users/waynerumble/Desktop/ReactElectronMirror/node_modules/react-cloud-vision-api/lib/models/Image.js","resolved":"/Users/waynerumble/Desktop/ReactElectronMirror/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict'\nconst //fs = require('react-native-fs'),\n\n  __ = require('underscore')\n\nclass Image {\n\n  constructor(path) {\n    const options = __.isObject(path) ? path : {\n      path: path\n    }\n    this._path = options.path\n    this._url = options.url\n\t  this._base64 = options.base64\n  }\n\n  load() {\n    return new Promise((resolve, reject) => {\n      if (this._path) {\n        resolve(fs.readFileSync(this._path).toString('base64')); //TODO: Implement for react native if it is needed\n      } else if (this._url) {\n        this._loadRemote().then(resolve)\n      } else if (this._base64) {\n\t\t      this._base64 = this._base64.substring(this._base64.indexOf(',') + 1); // remove 'data:image/jpeg;base64,' if included\n        resolve(this._base64)\n      } else {\n        console.log('No path or url are specified in image')\n        reject()\n      }\n    })\n  }\n\n  _loadRemote() {\n    return new Promise((resolve, reject) => {\n      request({\n        url: this._url,\n        encoding: null\n      }, (err, response, body) => {\n        if (!err && response.statusCode == 200) {\n          resolve(new Buffer(body).toString('base64'))\n        } else {\n          console.log('Error while loading image. code: ' + response.statusCode, err)\n          // reject(err)\n          resolve('')\n          // reject(err)\n        }\n      })\n    })\n  }\n\n  build() {\n    return new Promise((resolve, reject) => {\n      this.load().then((cotent) => {\n        resolve({content: content})\n      })\n    })\n  }\n}\n\nmodule.exports = Image\n","map":{"mappings":[{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/react-cloud-vision-api/lib/models/Image.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}}],"sources":{"../node_modules/react-cloud-vision-api/lib/models/Image.js":"'use strict'\nconst //fs = require('react-native-fs'),\n\n  __ = require('underscore')\n\nclass Image {\n\n  constructor(path) {\n    const options = __.isObject(path) ? path : {\n      path: path\n    }\n    this._path = options.path\n    this._url = options.url\n\t  this._base64 = options.base64\n  }\n\n  load() {\n    return new Promise((resolve, reject) => {\n      if (this._path) {\n        resolve(fs.readFileSync(this._path).toString('base64')); //TODO: Implement for react native if it is needed\n      } else if (this._url) {\n        this._loadRemote().then(resolve)\n      } else if (this._base64) {\n\t\t      this._base64 = this._base64.substring(this._base64.indexOf(',') + 1); // remove 'data:image/jpeg;base64,' if included\n        resolve(this._base64)\n      } else {\n        console.log('No path or url are specified in image')\n        reject()\n      }\n    })\n  }\n\n  _loadRemote() {\n    return new Promise((resolve, reject) => {\n      request({\n        url: this._url,\n        encoding: null\n      }, (err, response, body) => {\n        if (!err && response.statusCode == 200) {\n          resolve(new Buffer(body).toString('base64'))\n        } else {\n          console.log('Error while loading image. code: ' + response.statusCode, err)\n          // reject(err)\n          resolve('')\n          // reject(err)\n        }\n      })\n    })\n  }\n\n  build() {\n    return new Promise((resolve, reject) => {\n      this.load().then((cotent) => {\n        resolve({content: content})\n      })\n    })\n  }\n}\n\nmodule.exports = Image\n"},"lineCount":62}},"hash":"bdb6da3bb108a202928d16a1a1eedca3","cacheData":{"env":{}}}